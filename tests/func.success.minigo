// The following code must be successfully parsed and not result in an errorfun
package main;

// func TestHelloWorld() {
//     printf("Hello, World\n");
// };

// func TestBasicArithmetic() {
//     a := 5;
//     b := 3;
//     c := a + b;
//        printf("%lld\n", c);
// };

// func TestConditionalStatement() {
//     a := 5;
//     if a > 3 {
//        printf("a is greater than 3\n");
//     } else {
//        printf("a is not greater than 3\n");
//     };
// };

// func TestInfiniteForLoop() {
//  i := 0;
//  for {
//      if i >= 5 {
//          break;
//      };
//      printf("%lld\n", i);
//      i = i + 1;
//  };
// };

//  func TestForConditional() {
//      i := 0;
//      for i < 5 {
//          printf("%lld\n", i);
//          i = i + 1;
//      };
//  };

//  func TestForLoopClassic() {
//      for i := 0; i < 5; i = i + 1 {
//          printf("%lld\n", i);
//      };
//  };

//  func SumOfFirstNNaturalNumbers() {
//      sum := 0;
//      n := 10;
//      for i := 1; i <= n; i = i + 1 {
//          sum = sum + i;
//      };

//      printf("%lld\n", sum);
//  };

//  func Factorial() {
//      n := 5;
//      fact := 1;
//      for i := 1; i <= n; i = i + 1 {
//          fact = fact * i;
//      };

//      printf("%lld\n", fact);
//  };

//  func Fibonacci() {
//      n := 10;
//      a := 0;
//      b := 1;
//      printf("%lld\n", a);
//      printf("%lld\n", b);

//      for i := 2; i < n; i = i + 1 {
//          c := a + b;
//          printf("%lld\n", c);
//          a = b;
//          b = c;
//      };
//  };

//  func ArrayReversal() {
//      var arr [5]int;
//      arr[0] = 1;
//      arr[1] = 2;
//      arr[2] = 3;
//      arr[3] = 4;
//      arr[4] = 5;
//      n := 5;
//      for i := 0; i < (n/2); i = i + 1 {
//          temp := arr[i];
//          idx := n - i - 1;
//          arr[i] = arr[idx];
//          arr[idx] = temp;
//      };

//      for i := 0; i < len(arr); i++ {
//          printf("arr[%d] = %lld\n", i, arr[i]);
//      };
//  };

//  func BubbleSort() {
//      var arr [5]int;
//      arr[0] = 5;
//      arr[1] = 3;
//      arr[2] = 2;
//      arr[3] = 4;
//      arr[4] = 1;

//      for i := 0; i < len(arr); i++ {
//          printf("bubble sort before: %lld\n", arr[i]);
//      };

//      for i := 0; i < len(arr)-1; i = i + 1 {
//          for j := 0; j < len(arr)-i-1; j = j + 1 {
//              if arr[j] > arr[j+1] {
//                  temp := arr[j];
//                  arr[j] = arr[j+1];
//                  arr[j+1] = temp;
//              };
//          };
//      };

//      for i := 0; i < len(arr); i++ {
//          printf("bubble sort after: %lld\n", arr[i]);
//      };
//  };


var PIOVER180 = 0.01745329252;
func deg2rad(x float) float {
    return x * PIOVER180;
};

func sind(theta float) float {
    return (4.0*theta*(180.0-theta))/(40500.0-theta*(180.0-theta));

};

var PI = 3.141592653589793;

func sin(theta float) float {
    return (16.0 * theta * (PI - theta))/(5.0*PI*PI - (4.0*theta*(PI-theta)));
};

var PISQUARED = 9.689604401;
func cos(theta float) float {
    return (PISQUARED - 4.0 * (theta*theta))/(PISQUARED + theta*theta);
};

// func cos(x float) float {
//     return 1.0 - ((x*x)/7000.0);
// };

// func tan(x float) float {
//     return (10.0 + x) / (100.0 - x);
// };

func main() {
    // TestHelloWorld();
    // TestBasicArithmetic();
    // TestConditionalStatement();
    // TestInfiniteForLoop();
    // TestForConditional();
    // TestForLoopClassic();
    // SumOfFirstNNaturalNumbers();
    // Factorial();
    // Fibonacci();
    // ArrayReversal();
    // BubbleSort();
    // for idx := 0.0; idx <= 90.0; idx += 1.0 {
    //     println(idx);
    //     printf("bhask:sin(%.0lf) = %.3lf\n", idx, BhaskarasApproximation(idx));
    //     // printf("normal:sin(%.0lf) = %.3lf\n", idx, sin(idx));
    //     // printf("cos(%.0lf) = %.3lf\n", idx, cos(idx));
    //     // printf("tan(%.0lf) = %.3lf\n", idx, tan(idx));
    //     println();
    // };
    for idx := 0.0; idx < 180.0; idx += 1.0 {
        rad := deg2rad(idx);
        printf("deg2rad(%lf) = %lf\n", idx, rad);
        printf("sin(%0.2lf) = %lf\n", rad, sin(rad));
        printf("cos(%0.2lf) = %lf\n", rad, cos(rad));
    };
};
